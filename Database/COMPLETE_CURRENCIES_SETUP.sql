-- ============================================
-- ุฅุนุฏุงุฏ ูุงูู ููุธุงู ุงูุนููุงุช
-- Complete Currencies System Setup
-- ============================================

-- ============================================
-- ุงูุฎุทูุฉ 1: ุฅูุดุงุก ุฌุฏูู ุงูุนููุงุช
-- ============================================

-- ุฅูุดุงุก ุฌุฏูู ุงูุนููุงุช
CREATE TABLE IF NOT EXISTS currencies (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  code VARCHAR(3) NOT NULL UNIQUE, -- ูุซู: AED, USD, SAR
  name VARCHAR(100) NOT NULL, -- ูุซู: UAE Dirham, US Dollar
  symbol VARCHAR(10) NOT NULL, -- ูุซู: ุฏ.ุฅ, $, ุฑ.ุณ
  exchange_rate DECIMAL(10, 6) NOT NULL DEFAULT 1.0, -- ุณุนุฑ ุงูุตุฑู ููุงุจู AED
  is_default BOOLEAN DEFAULT FALSE, -- ุงูุนููุฉ ุงูุงูุชุฑุงุถูุฉ
  is_active BOOLEAN DEFAULT TRUE,
  usage_count INTEGER DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ุฅูุดุงุก ููุฑุณ ููุจุญุซ ุงูุณุฑูุน
CREATE INDEX IF NOT EXISTS idx_currencies_code ON currencies(code);
CREATE INDEX IF NOT EXISTS idx_currencies_is_active ON currencies(is_active);
CREATE INDEX IF NOT EXISTS idx_currencies_is_default ON currencies(is_default);

-- ุฅุถุงูุฉ ุชุนูููุงุช ููุชูุถูุญ
COMMENT ON TABLE currencies IS 'ุฌุฏูู ุงูุนููุงุช ูุน ุชุญุฏูุฏ ุชููุงุฆู ููุนููุฉ ุงูุฅูุงุฑุงุชูุฉ';
COMMENT ON COLUMN currencies.id IS 'ุงููุนุฑู ุงููุฑูุฏ ููุนููุฉ';
COMMENT ON COLUMN currencies.code IS 'ุฑูุฒ ุงูุนููุฉ (3 ุฃุญุฑู)';
COMMENT ON COLUMN currencies.name IS 'ุงุณู ุงูุนููุฉ';
COMMENT ON COLUMN currencies.symbol IS 'ุฑูุฒ ุงูุนููุฉ ููุนุฑุถ';
COMMENT ON COLUMN currencies.exchange_rate IS 'ุณุนุฑ ุงูุตุฑู ููุงุจู ุงูุฏุฑูู ุงูุฅูุงุฑุงุชู';
COMMENT ON COLUMN currencies.is_default IS 'ูู ูุฐู ุงูุนููุฉ ุงูุงูุชุฑุงุถูุฉุ';
COMMENT ON COLUMN currencies.is_active IS 'ูู ุงูุนููุฉ ูุดุทุฉุ';
COMMENT ON COLUMN currencies.usage_count IS 'ุนุฏุฏ ุงููุฑุงุช ุงูุชู ุชู ุงุณุชุฎุฏุงู ุงูุนููุฉ ูู ุงููุดุงุฑูุน';
COMMENT ON COLUMN currencies.created_at IS 'ุชุงุฑูุฎ ุฅูุดุงุก ุงูุนููุฉ';
COMMENT ON COLUMN currencies.updated_at IS 'ุชุงุฑูุฎ ุขุฎุฑ ุชุญุฏูุซ ููุนููุฉ';

-- ============================================
-- ุงูุฎุทูุฉ 2: ุฅุถุงูุฉ ุนููุฏ Currency ุฅูู ุฌุฏูู ุงููุดุงุฑูุน
-- ============================================

-- ุฅุถุงูุฉ ุนููุฏ Currency ุฅูู ุฌุฏูู ุงููุดุงุฑูุน
ALTER TABLE "Planning Database - ProjectsList" 
ADD COLUMN IF NOT EXISTS "Currency" VARCHAR(3) DEFAULT 'AED';

-- ุฅุถุงูุฉ ุชุนููู ููุนููุฏ
COMMENT ON COLUMN "Planning Database - ProjectsList"."Currency" IS 'ุนููุฉ ุงููุดุฑูุน (ุงูุชุฑุงุถู: AED)';

-- ุชุญุฏูุซ ุงููุดุงุฑูุน ุงูููุฌูุฏุฉ ูุชุณุชุฎุฏู ุงูุนููุฉ ุงูุงูุชุฑุงุถูุฉ
UPDATE "Planning Database - ProjectsList" 
SET "Currency" = 'AED' 
WHERE "Currency" IS NULL;

-- ุฅูุดุงุก ููุฑุณ ููุจุญุซ ุงูุณุฑูุน
CREATE INDEX IF NOT EXISTS idx_projects_currency ON "Planning Database - ProjectsList"("Currency");

-- ============================================
-- ุงูุฎุทูุฉ 3: ุฅุฏุฑุงุฌ ุงูุนููุงุช ุงูุงูุชุฑุงุถูุฉ
-- ============================================

-- ุฅุฏุฑุงุฌ ุงูุนููุงุช ุงูุงูุชุฑุงุถูุฉ
INSERT INTO currencies (code, name, symbol, exchange_rate, is_default, is_active) VALUES
  ('AED', 'UAE Dirham', 'ุฏ.ุฅ', 1.000000, TRUE, TRUE),
  ('USD', 'US Dollar', '$', 0.272294, FALSE, TRUE),
  ('SAR', 'Saudi Riyal', 'ุฑ.ุณ', 1.020000, FALSE, TRUE)
ON CONFLICT (code) DO NOTHING;

-- ============================================
-- ุงูุฎุทูุฉ 4: ุฅูุดุงุก ุงูุฏูุงู ูุงูู Triggers
-- ============================================

-- ุฏุงูุฉ ูุชุญุฏูุซ updated_at ุชููุงุฆูุงู
CREATE OR REPLACE FUNCTION update_currencies_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- ุฅูุดุงุก trigger ูุชุญุฏูุซ updated_at ุชููุงุฆูุงู
DROP TRIGGER IF EXISTS currencies_updated_at_trigger ON currencies;
CREATE TRIGGER currencies_updated_at_trigger
  BEFORE UPDATE ON currencies
  FOR EACH ROW
  EXECUTE FUNCTION update_currencies_updated_at();

-- ============================================
-- ุงูุฎุทูุฉ 5: ุฏุงูุฉ ุชุญุฏูุฏ ุงูุนููุฉ ุชููุงุฆูุงู
-- ============================================

-- ุฏุงูุฉ ูุชุญุฏูุฏ ุงูุนููุฉ ุญุณุจ ูููุน ุงููุดุฑูุน
CREATE OR REPLACE FUNCTION get_currency_for_location(project_location TEXT DEFAULT NULL)
RETURNS VARCHAR(3) AS $$
DECLARE
  location_lower TEXT;
  default_currency VARCHAR(3);
BEGIN
  -- ุงูุญุตูู ุนูู ุงูุนููุฉ ุงูุงูุชุฑุงุถูุฉ
  SELECT code INTO default_currency
  FROM currencies
  WHERE is_default = TRUE AND is_active = TRUE
  LIMIT 1;
  
  -- ุฅุฐุง ูู ูุชู ุชุญุฏูุฏ ุงููููุนุ ุงุณุชุฎุฏู ุงูุนููุฉ ุงูุงูุชุฑุงุถูุฉ
  IF project_location IS NULL OR project_location = '' THEN
    RETURN COALESCE(default_currency, 'AED');
  END IF;
  
  location_lower := LOWER(project_location);
  
  -- ุชุญุฏูุฏ ุงูุนููุฉ ุญุณุจ ุงููููุน
  IF location_lower ~ 'uae|emirates|dubai|abu dhabi' THEN
    RETURN COALESCE(default_currency, 'AED');
  ELSIF location_lower ~ 'saudi|riyadh|jeddah' THEN
    RETURN 'SAR';
  ELSIF location_lower ~ 'usa|america|dollar' THEN
    RETURN 'USD';
  ELSE
    RETURN COALESCE(default_currency, 'AED');
  END IF;
END;
$$ LANGUAGE plpgsql;

-- ============================================
-- ุงูุฎุทูุฉ 6: ุฏุงูุฉ ุฅุญุตุงุฆูุงุช ุงูุนููุงุช ุงููุงููุฉ
-- ============================================

-- ุฏุงูุฉ ููุญุตูู ุนูู ุฅุญุตุงุฆูุงุช ุงูุนููุงุช
CREATE OR REPLACE FUNCTION get_currency_stats()
RETURNS TABLE (
  currency_code VARCHAR(3),
  currency_name VARCHAR(100),
  currency_symbol VARCHAR(10),
  projects_count BIGINT,
  total_contract_value NUMERIC
) AS $$
BEGIN
  RETURN QUERY
  SELECT 
    c.code AS currency_code,
    c.name AS currency_name,
    c.symbol AS currency_symbol,
    COUNT(p.id) AS projects_count,
    COALESCE(
      SUM(
        CASE 
          WHEN p."Contract Amount" IS NOT NULL AND p."Contract Amount" ~ '^[0-9]+\.?[0-9]*$'
          THEN CAST(p."Contract Amount" AS NUMERIC)
          ELSE 0
        END
      ), 
      0
    ) AS total_contract_value
  FROM currencies c
  LEFT JOIN "Planning Database - ProjectsList" p ON p."Currency" = c.code
  WHERE c.is_active = TRUE
  GROUP BY c.code, c.name, c.symbol
  ORDER BY projects_count DESC;
END;
$$ LANGUAGE plpgsql;

-- ============================================
-- ุงูุฎุทูุฉ 7: Row Level Security (RLS)
-- ============================================

-- ุชูุนูู RLS
ALTER TABLE currencies ENABLE ROW LEVEL SECURITY;

-- ุณูุงุณุฉ ุงููุฑุงุกุฉ: ุงูุฌููุน ูููููู ูุฑุงุกุฉ ุงูุนููุงุช ุงููุดุทุฉ
CREATE POLICY "Anyone can view active currencies"
  ON currencies
  FOR SELECT
  USING (is_active = TRUE);

-- ุณูุงุณุฉ ุงูุฅุถุงูุฉ: ุงููุณุชุฎุฏููู ุงููุตุฑุญ ููู ููุท
CREATE POLICY "Authenticated users can add currencies"
  ON currencies
  FOR INSERT
  TO authenticated
  WITH CHECK (TRUE);

-- ุณูุงุณุฉ ุงูุชุญุฏูุซ: ุงููุณุชุฎุฏููู ุงููุตุฑุญ ููู ููุท
CREATE POLICY "Authenticated users can update currencies"
  ON currencies
  FOR UPDATE
  TO authenticated
  USING (TRUE)
  WITH CHECK (TRUE);

-- ุณูุงุณุฉ ุงูุญุฐู: ุงููุณุชุฎุฏููู ุงููุตุฑุญ ููู ููุท
CREATE POLICY "Authenticated users can delete currencies"
  ON currencies
  FOR DELETE
  TO authenticated
  USING (TRUE);

-- ============================================
-- ุงูุฎุทูุฉ 8: ุชุญุฏูุซ ุงููุดุงุฑูุน ุงูููุฌูุฏุฉ
-- ============================================

-- ุชุญุฏูุซ ุงููุดุงุฑูุน ุงูููุฌูุฏุฉ ูุชุณุชุฎุฏู ุงูุนููุฉ ุงูุงูุชุฑุงุถูุฉ (AED)
UPDATE "Planning Database - ProjectsList" 
SET "Currency" = 'AED'
WHERE "Currency" IS NULL OR "Currency" = '';

-- ููุงุญุธุฉ: ูููู ุชุญุฏูุซ ุงูุนููุฉ ูุงุญูุงู ุญุณุจ ุงููููุน ุนูุฏ ุฅุถุงูุฉ ุนููุฏ Project Location

-- ============================================
-- ุงูุฎุทูุฉ 9: ุงูุงุฎุชุจุงุฑ ูุงูุชุญูู
-- ============================================

-- ุนุฑุถ ุฌููุน ุงูุนููุงุช
SELECT 
  code,
  name,
  symbol,
  exchange_rate,
  is_default,
  usage_count
FROM currencies 
WHERE is_active = TRUE
ORDER BY is_default DESC, name;

-- ุนุฑุถ ุฅุญุตุงุฆูุงุช ุงูุนููุงุช
SELECT * FROM get_currency_stats();

-- ุงุฎุชุจุงุฑ ุฏุงูุฉ ุชุญุฏูุฏ ุงูุนููุฉ
SELECT 
  'UAE Project' as project_location,
  get_currency_for_location('UAE') as currency_code
UNION ALL
SELECT 
  'Saudi Project' as project_location,
  get_currency_for_location('Saudi Arabia') as currency_code
UNION ALL
SELECT 
  'US Project' as project_location,
  get_currency_for_location('USA') as currency_code
UNION ALL
SELECT 
  'Unknown Location' as project_location,
  get_currency_for_location(NULL) as currency_code;

-- ุนุฑุถ ุนููุฉ ูู ุงููุดุงุฑูุน ูุน ุงูุนููุงุช
SELECT 
  "Project Code",
  "Project Name", 
  "Currency",
  "Contract Amount"
FROM "Planning Database - ProjectsList" 
LIMIT 10;

-- ============================================
-- ุฅููุงู ุงูุฅุนุฏุงุฏ
-- ============================================

-- ุฑุณุงูุฉ ูุฌุงุญ
DO $$
BEGIN
  RAISE NOTICE 'โ Currencies system setup completed successfully!';
  RAISE NOTICE '๐ Default currencies: AED (UAE), USD (US), SAR (Saudi)';
  RAISE NOTICE '๐ง Auto-detection: UAEโAED, SaudiโSAR, USโUSD, OthersโAED';
  RAISE NOTICE '๐ฐ Currency column added to projects table';
  RAISE NOTICE '๐ Statistics function ready';
END $$;
